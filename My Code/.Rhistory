E(t4.net)$color <- if_else( E(t4.net)$weight > 0, "green3", "red3")
V(t4.net)$label <- NA
V(t4.net)$size <- igraph::degree(t4.net, v = V(t4.net), mode = "in")*2
plot(t4.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = (-1, 1))
#op <- par(mfrow=c(2,2), mai = c(0,0,0.7,0))
#Making a Signed Graph Objects (Times 1:4)
t1.net <- graph_from_adjacency_matrix(t1, mode = "directed", weighted = T)
t2.net <- graph_from_adjacency_matrix(t2, mode = "directed", weighted = T)
t3.net <- graph_from_adjacency_matrix(t3, mode = "directed", weighted = T)
t4.net <- graph_from_adjacency_matrix(t4, mode = "directed", weighted = T)
#Time 1
E(t1.net)$color <- if_else( E(t1.net)$weight > 0, "green3", "red3")
V(t1.net)$label <- NA
V(t1.net)$size <- igraph::degree(t1.net, v = V(t1.net), mode = "in")*2
plot(t1.net, layout=layout_with_fr, edge.arrow.size = .3, rescale = c(-1, 1))
title("Time 1")
#Time 2
E(t2.net)$color <- if_else( E(t2.net)$weight > 0, "green3", "red3")
V(t2.net)$label <- NA
V(t2.net)$size <- igraph::degree(t2.net, v = V(t2.net), mode = "in")*2
plot(t2.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-1.5, 1.5))
title("Time 2")
#Time 3
E(t3.net)$color <- if_else( E(t3.net)$weight > 0, "green3", "red3")
V(t3.net)$label <- NA
V(t3.net)$size <- igraph::degree(t3.net, v = V(t3.net), mode = "in")*2
plot(t3.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-1, 1))
title("Time 3")
#Time 4
E(t4.net)$color <- if_else( E(t4.net)$weight > 0, "green3", "red3")
V(t4.net)$label <- NA
V(t4.net)$size <- igraph::degree(t4.net, v = V(t4.net), mode = "in")*2
plot(t4.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-1, 1))
title("Time 4")
#par(op)
#op <- par(mfrow=c(2,2), mai = c(0,0,0.7,0))
#Making a Signed Graph Objects (Times 1:4)
t1.net <- graph_from_adjacency_matrix(t1, mode = "directed", weighted = T)
t2.net <- graph_from_adjacency_matrix(t2, mode = "directed", weighted = T)
t3.net <- graph_from_adjacency_matrix(t3, mode = "directed", weighted = T)
t4.net <- graph_from_adjacency_matrix(t4, mode = "directed", weighted = T)
#Time 1
E(t1.net)$color <- if_else( E(t1.net)$weight > 0, "green3", "red3")
V(t1.net)$label <- NA
V(t1.net)$size <- igraph::degree(t1.net, v = V(t1.net), mode = "in")*2
plot(t1.net, layout=layout_with_fr, edge.arrow.size = .3, rescale = c(-1, 1))
title("Time 1")
#Time 2
E(t2.net)$color <- if_else( E(t2.net)$weight > 0, "green3", "red3")
V(t2.net)$label <- NA
V(t2.net)$size <- igraph::degree(t2.net, v = V(t2.net), mode = "in")*2
plot(t2.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-1.5, 1.5))
title("Time 2")
#Time 3
E(t3.net)$color <- if_else( E(t3.net)$weight > 0, "green3", "red3")
V(t3.net)$label <- NA
V(t3.net)$size <- igraph::degree(t3.net, v = V(t3.net), mode = "in")*2
plot(t3.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-1, 1))
title("Time 3")
#Time 4
E(t4.net)$color <- if_else( E(t4.net)$weight > 0, "green3", "red3")
V(t4.net)$label <- NA
V(t4.net)$size <- igraph::degree(t4.net, v = V(t4.net), mode = "in")*2
plot(t4.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-1, 1))
title("Time 4")
#par(op)
#op <- par(mfrow=c(2,2), mai = c(0,0,0.7,0))
#Making a Signed Graph Objects (Times 1:4)
t1.net <- graph_from_adjacency_matrix(t1, mode = "directed", weighted = T)
t2.net <- graph_from_adjacency_matrix(t2, mode = "directed", weighted = T)
t3.net <- graph_from_adjacency_matrix(t3, mode = "directed", weighted = T)
t4.net <- graph_from_adjacency_matrix(t4, mode = "directed", weighted = T)
#Time 1
E(t1.net)$color <- if_else( E(t1.net)$weight > 0, "green3", "red3")
V(t1.net)$label <- NA
V(t1.net)$size <- igraph::degree(t1.net, v = V(t1.net), mode = "in")*2
plot(t1.net, layout=layout_with_fr, edge.arrow.size = .3, rescale = c(-.25, .25))
title("Time 1")
#Time 2
E(t2.net)$color <- if_else( E(t2.net)$weight > 0, "green3", "red3")
V(t2.net)$label <- NA
V(t2.net)$size <- igraph::degree(t2.net, v = V(t2.net), mode = "in")*2
plot(t2.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-.25, .25))
title("Time 2")
#Time 3
E(t3.net)$color <- if_else( E(t3.net)$weight > 0, "green3", "red3")
V(t3.net)$label <- NA
V(t3.net)$size <- igraph::degree(t3.net, v = V(t3.net), mode = "in")*2
plot(t3.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-.25, .25))
title("Time 3")
#Time 4
E(t4.net)$color <- if_else( E(t4.net)$weight > 0, "green3", "red3")
V(t4.net)$label <- NA
V(t4.net)$size <- igraph::degree(t4.net, v = V(t4.net), mode = "in")*2
plot(t4.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-.25, .25))
title("Time 4")
#par(op)
library(network)
library(devtools)
library(sna)
library(igraph)
library(tidyverse)
t1 <- as.matrix(read.delim("~/desktop/Repository/Agent-Based-Models/Data/Marijtje-Signed-Longitudinal/t1.dat", header = F, sep = " "))
t2 <- as.matrix(read.delim("~/desktop/Repository/Agent-Based-Models/Data/Marijtje-Signed-Longitudinal/t2.dat", header = F, sep = " "))
t3 <- as.matrix(read.delim("~/desktop/Repository/Agent-Based-Models/Data/Marijtje-Signed-Longitudinal/t3.dat", header = F, sep = " "))
t4 <- as.matrix(read.delim("~/desktop/Repository/Agent-Based-Models/Data/Marijtje-Signed-Longitudinal/t4.dat", header = F, sep = " "))
cov1 <- read.delim("~/desktop/Repository/Agent-Based-Models/Data/Marijtje-Signed-Longitudinal/cov1.dat", header = F, sep = " ", na.strings = "NA")
cov4 <- read.delim("~/desktop/Repository/Agent-Based-Models/Data/Marijtje-Signed-Longitudinal/cov4.dat", header = F, sep = " ", na.strings = "NA")
#Network Objects
#t1.net <- as.network(t1)
#t2.net <- as.network(t2)
#t3.net <- as.network(t3)
#t4.net <- as.network(t4)
#summary(t1.net)
#summary(t2.net)
#summary(t3.net)
#summary(t4.net)
#Matrices will contain -1, 0, or 1
#Time 1
for (i in 1:38) {
for (j in 1:38) {
t1[i,j] <- if_else(t1[i,j] == 1, 1,
if_else(t1[i,j] == 2, 1,
if_else(t1[i,j] == 3, 1,
if_else(t1[i,j] == 4, 0, #Neutral relationships = 0?
if_else(t1[i,j] == 5, -1, 0)))))
}
}
#Time 2
for (i in 1:38) {
for (j in 1:38) {
t2[i,j] <- if_else(t2[i,j] == 1, 1,
if_else(t2[i,j] == 2, 1,
if_else(t2[i,j] == 3, 1,
if_else(t2[i,j] == 4, 0, #Neutral relationships = 0?
if_else(t2[i,j] == 5, -1, 0)))))
}
}
#Time 3
for (i in 1:38) {
for (j in 1:38) {
t3[i,j] <- if_else(t3[i,j] == 1, 1,
if_else(t3[i,j] == 2, 1,
if_else(t3[i,j] == 3, 1,
if_else(t3[i,j] == 4, 0, #Neutral relationships = 0?
if_else(t3[i,j] == 5, -1, 0)))))
}
}
#Time 4
for (i in 1:38) {
for (j in 1:38) {
t4[i,j] <- if_else(t4[i,j] == 1, 1,
if_else(t4[i,j] == 2, 1,
if_else(t4[i,j] == 3, 1,
if_else(t4[i,j] == 4, 0, #Neutral relationships = 0?
if_else(t4[i,j] == 5, -1, 0)))))
}
}
#op <- par(mfrow=c(2,2), mai = c(0,0,0.7,0))
#Making a Signed Graph Objects (Times 1:4)
t1.net <- graph_from_adjacency_matrix(t1, mode = "directed", weighted = T)
t2.net <- graph_from_adjacency_matrix(t2, mode = "directed", weighted = T)
t3.net <- graph_from_adjacency_matrix(t3, mode = "directed", weighted = T)
t4.net <- graph_from_adjacency_matrix(t4, mode = "directed", weighted = T)
#Time 1
E(t1.net)$color <- if_else( E(t1.net)$weight > 0, "green3", "red3")
V(t1.net)$label <- NA
V(t1.net)$size <- igraph::degree(t1.net, v = V(t1.net), mode = "in")*2
plot(t1.net, layout=layout_with_fr, edge.arrow.size = .3, rescale = c(-.25, .25))
title("Time 1")
#Time 2
E(t2.net)$color <- if_else( E(t2.net)$weight > 0, "green3", "red3")
V(t2.net)$label <- NA
V(t2.net)$size <- igraph::degree(t2.net, v = V(t2.net), mode = "in")*2
plot(t2.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-.25, .25))
title("Time 2")
#Time 3
E(t3.net)$color <- if_else( E(t3.net)$weight > 0, "green3", "red3")
V(t3.net)$label <- NA
V(t3.net)$size <- igraph::degree(t3.net, v = V(t3.net), mode = "in")*2
plot(t3.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-.25, .25))
title("Time 3")
#Time 4
E(t4.net)$color <- if_else( E(t4.net)$weight > 0, "green3", "red3")
V(t4.net)$label <- NA
V(t4.net)$size <- igraph::degree(t4.net, v = V(t4.net), mode = "in")*2
plot(t4.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-.25, .25))
title("Time 4")
#par(op)
#op <- par(mfrow=c(2,2), mai = c(0,0,0.7,0))
#Making a Signed Graph Objects (Times 1:4)
t1.net <- graph_from_adjacency_matrix(t1, mode = "directed", weighted = T)
t2.net <- graph_from_adjacency_matrix(t2, mode = "directed", weighted = T)
t3.net <- graph_from_adjacency_matrix(t3, mode = "directed", weighted = T)
t4.net <- graph_from_adjacency_matrix(t4, mode = "directed", weighted = T)
#Time 1
E(t1.net)$color <- if_else( E(t1.net)$weight > 0, "green3", "red3")
V(t1.net)$label <- NA
V(t1.net)$size <- igraph::degree(t1.net, v = V(t1.net), mode = "in")*2
plot(t1.net, layout=layout_with_fr, edge.arrow.size = .3, rescale = c(-2, 2))
title("Time 1")
#Time 2
E(t2.net)$color <- if_else( E(t2.net)$weight > 0, "green3", "red3")
V(t2.net)$label <- NA
V(t2.net)$size <- igraph::degree(t2.net, v = V(t2.net), mode = "in")*2
plot(t2.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-2, 2))
title("Time 2")
#Time 3
E(t3.net)$color <- if_else( E(t3.net)$weight > 0, "green3", "red3")
V(t3.net)$label <- NA
V(t3.net)$size <- igraph::degree(t3.net, v = V(t3.net), mode = "in")*2
plot(t3.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-10, 10))
title("Time 3")
#Time 4
E(t4.net)$color <- if_else( E(t4.net)$weight > 0, "green3", "red3")
V(t4.net)$label <- NA
V(t4.net)$size <- igraph::degree(t4.net, v = V(t4.net), mode = "in")*2
plot(t4.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-5, 5))
title("Time 4")
#par(op)
#Time 1
E(t1.net)$color <- if_else( E(t1.net)$weight > 0, "green3", "red3")
V(t1.net)$label <- NA
V(t1.net)$size <- igraph::degree(t1.net, v = V(t1.net), mode = "in")*2
plot(t1.net, layout=layout_with_fr, edge.arrow.size = .3, rescale = c(-2, 2))
title("Time 1")
#Time 2
E(t2.net)$color <- if_else( E(t2.net)$weight > 0, "green3", "red3")
V(t2.net)$label <- NA
V(t2.net)$size <- igraph::degree(t2.net, v = V(t2.net), mode = "in")*2
plot(t2.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-2, 2))
title("Time 2")
#Time 3
E(t3.net)$color <- if_else( E(t3.net)$weight > 0, "green3", "red3")
V(t3.net)$label <- NA
V(t3.net)$size <- igraph::degree(t3.net, v = V(t3.net), mode = "in")*2
plot(t3.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-10, 10))
title("Time 3")
E(t3.net)$color <- if_else( E(t3.net)$weight > 0, "green3", "red3")
V(t3.net)$label <- NA
V(t3.net)$size <- igraph::degree(t3.net, v = V(t3.net), mode = "in")*2
plot(t3.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(0, 1))
title("Time 3")
#Time 3
E(t3.net)$color <- if_else( E(t3.net)$weight > 0, "green3", "red3")
V(t3.net)$label <- NA
V(t3.net)$size <- igraph::degree(t3.net, v = V(t3.net), mode = "in")*2
plot(t3.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(1, 2))
title("Time 3")
E(t3.net)$color <- if_else( E(t3.net)$weight > 0, "green3", "red3")
V(t3.net)$label <- NA
V(t3.net)$size <- igraph::degree(t3.net, v = V(t3.net), mode = "in")*2
plot(t3.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-1, 2))
title("Time 3")
#Time 3
E(t3.net)$color <- if_else( E(t3.net)$weight > 0, "green3", "red3")
V(t3.net)$label <- NA
V(t3.net)$size <- igraph::degree(t3.net, v = V(t3.net), mode = "in")*2
plot(t3.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-1, 1))
title("Time 3")
#Time 4
E(t4.net)$color <- if_else( E(t4.net)$weight > 0, "green3", "red3")
V(t4.net)$label <- NA
V(t4.net)$size <- igraph::degree(t4.net, v = V(t4.net), mode = "in")*2
plot(t4.net, layout=layout_with_dh, edge.arrow.size = .3, rescale = c(-5, 5))
title("Time 4")
#op <- par(mfrow=c(2,2), mai = c(0,0,0.7,0))
#Making a Signed Graph Objects (Times 1:4)
t1.net <- graph_from_adjacency_matrix(t1, mode = "directed", weighted = T)
t2.net <- graph_from_adjacency_matrix(t2, mode = "directed", weighted = T)
t3.net <- graph_from_adjacency_matrix(t3, mode = "directed", weighted = T)
t4.net <- graph_from_adjacency_matrix(t4, mode = "directed", weighted = T)
#Rescaling Networks
#Time 1
l <- layout_with_fr(t1.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t1.net)$color <- if_else( E(t1.net)$weight > 0, "green3", "red3")
V(t1.net)$label <- NA
V(t1.net)$size <- igraph::degree(t1.net, v = V(t1.net), mode = "in")*2
plot(t1.net, layout=l*2, edge.arrow.size = .3, rescale = F)
title("Time 1")
#Time 2
l <- layout_with_fr(t2.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t2.net)$color <- if_else( E(t2.net)$weight > 0, "green3", "red3")
V(t2.net)$label <- NA
V(t2.net)$size <- igraph::degree(t2.net, v = V(t2.net), mode = "in")*2
plot(t2.net, layout=l*2, edge.arrow.size = .3, rescale = F)
title("Time 2")
#Time 3
l <- layout_with_fr(t3.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t3.net)$color <- if_else( E(t3.net)$weight > 0, "green3", "red3")
V(t3.net)$label <- NA
V(t3.net)$size <- igraph::degree(t3.net, v = V(t3.net), mode = "in")*2
plot(t3.net, layout=l*2, edge.arrow.size = .3, rescale = F)
title("Time 3")
#Time 4
l <- layout_with_fr(t4.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t4.net)$color <- if_else( E(t4.net)$weight > 0, "green3", "red3")
V(t4.net)$label <- NA
V(t4.net)$size <- igraph::degree(t4.net, v = V(t4.net), mode = "in")*2
plot(t4.net, layout=l*2, edge.arrow.size = .3, rescale = F)
title("Time 4")
#par(op)
#op <- par(mfrow=c(2,2), mai = c(0,0,0.7,0))
#Making a Signed Graph Objects (Times 1:4)
t1.net <- graph_from_adjacency_matrix(t1, mode = "directed", weighted = T)
t2.net <- graph_from_adjacency_matrix(t2, mode = "directed", weighted = T)
t3.net <- graph_from_adjacency_matrix(t3, mode = "directed", weighted = T)
t4.net <- graph_from_adjacency_matrix(t4, mode = "directed", weighted = T)
#Rescaling Networks
#Time 1
l <- layout_with_fr(t1.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t1.net)$color <- if_else( E(t1.net)$weight > 0, "green3", "red3")
V(t1.net)$label <- NA
V(t1.net)$size <- igraph::degree(t1.net, v = V(t1.net), mode = "in")*2
plot(t1.net, layout=l*1.5, edge.arrow.size = .3, rescale = F)
title("Time 1")
#Time 2
l <- layout_with_fr(t2.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t2.net)$color <- if_else( E(t2.net)$weight > 0, "green3", "red3")
V(t2.net)$label <- NA
V(t2.net)$size <- igraph::degree(t2.net, v = V(t2.net), mode = "in")*2
plot(t2.net, layout=l*1.5, edge.arrow.size = .3, rescale = F)
title("Time 2")
#Time 3
l <- layout_with_fr(t3.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t3.net)$color <- if_else( E(t3.net)$weight > 0, "green3", "red3")
V(t3.net)$label <- NA
V(t3.net)$size <- igraph::degree(t3.net, v = V(t3.net), mode = "in")*2
plot(t3.net, layout=l*1.5, edge.arrow.size = .3, rescale = F)
title("Time 3")
#Time 4
l <- layout_with_fr(t4.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t4.net)$color <- if_else( E(t4.net)$weight > 0, "green3", "red3")
V(t4.net)$label <- NA
V(t4.net)$size <- igraph::degree(t4.net, v = V(t4.net), mode = "in")*2
plot(t4.net, layout=l*1.5, edge.arrow.size = .3, rescale = F)
title("Time 4")
#par(op)
#op <- par(mfrow=c(2,2), mai = c(0,0,0.7,0))
#Making a Signed Graph Objects (Times 1:4)
t1.net <- graph_from_adjacency_matrix(t1, mode = "directed", weighted = T)
t2.net <- graph_from_adjacency_matrix(t2, mode = "directed", weighted = T)
t3.net <- graph_from_adjacency_matrix(t3, mode = "directed", weighted = T)
t4.net <- graph_from_adjacency_matrix(t4, mode = "directed", weighted = T)
#Rescaling Networks
#Time 1
l <- layout_with_fr(t1.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t1.net)$color <- if_else( E(t1.net)$weight > 0, "green3", "red3")
V(t1.net)$label <- NA
V(t1.net)$size <- igraph::degree(t1.net, v = V(t1.net), mode = "in")*2
plot(t1.net, layout=l*1.25, edge.arrow.size = .3, rescale = F)
title("Time 1")
#Time 2
l <- layout_with_dh(t2.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t2.net)$color <- if_else( E(t2.net)$weight > 0, "green3", "red3")
V(t2.net)$label <- NA
V(t2.net)$size <- igraph::degree(t2.net, v = V(t2.net), mode = "in")*2
plot(t2.net, layout=l*1.25, edge.arrow.size = .3, rescale = F)
title("Time 2")
#Time 3
l <- layout_with_dh(t3.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t3.net)$color <- if_else( E(t3.net)$weight > 0, "green3", "red3")
V(t3.net)$label <- NA
V(t3.net)$size <- igraph::degree(t3.net, v = V(t3.net), mode = "in")*2
plot(t3.net, layout=l*1.25, edge.arrow.size = .3, rescale = F)
title("Time 3")
#Time 4
l <- layout_with_dh(t4.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t4.net)$color <- if_else( E(t4.net)$weight > 0, "green3", "red3")
V(t4.net)$label <- NA
V(t4.net)$size <- igraph::degree(t4.net, v = V(t4.net), mode = "in")*2
plot(t4.net, layout=l*1.25, edge.arrow.size = .3, rescale = F)
title("Time 4")
#par(op)
l <- layout_with_kk(t2.net)
l <- layout_with_drl(t2.net)
#Time 2
l <- layout_with_sugiyama(t2.net)
l <- layout_with_sugiyama(t2.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
#Time 2
l <- layout_with_gem(t2.net)
l <- layout_with_gem(t2.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t2.net)$color <- if_else( E(t2.net)$weight > 0, "green3", "red3")
V(t2.net)$label <- NA
V(t2.net)$size <- igraph::degree(t2.net, v = V(t2.net), mode = "in")*2
plot(t2.net, layout=l*1.25, edge.arrow.size = .3, rescale = F)
title("Time 2")
l <- layout_with_dh(t2.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t2.net)$color <- if_else( E(t2.net)$weight > 0, "green3", "red3")
V(t2.net)$label <- NA
V(t2.net)$size <- igraph::degree(t2.net, v = V(t2.net), mode = "in")*2
plot(t2.net, layout=l*1.25, edge.arrow.size = .3, rescale = F)
title("Time 2")
l <- layout_in_circle(t2.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t2.net)$color <- if_else( E(t2.net)$weight > 0, "green3", "red3")
V(t2.net)$label <- NA
V(t2.net)$size <- igraph::degree(t2.net, v = V(t2.net), mode = "in")*2
plot(t2.net, layout=l*1.25, edge.arrow.size = .3, rescale = F)
l <- layout_in_circle(t2.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t2.net)$color <- if_else( E(t2.net)$weight > 0, "green3", "red3")
V(t2.net)$label <- NA
V(t2.net)$size <- igraph::degree(t2.net, v = V(t2.net), mode = "in")*2
plot(t2.net, layout=l*, edge.arrow.size = .3, rescale = F)
l <- layout_in_circle(t2.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t2.net)$color <- if_else( E(t2.net)$weight > 0, "green3", "red3")
V(t2.net)$label <- NA
V(t2.net)$size <- igraph::degree(t2.net, v = V(t2.net), mode = "in")*2
plot(t2.net, layout=l, edge.arrow.size = .3, rescale = F)
title("Time 2")
#op <- par(mfrow=c(2,2), mai = c(0,0,0.7,0))
#Making a Signed Graph Objects (Times 1:4)
t1.net <- graph_from_adjacency_matrix(t1, mode = "directed", weighted = T)
t2.net <- graph_from_adjacency_matrix(t2, mode = "directed", weighted = T)
t3.net <- graph_from_adjacency_matrix(t3, mode = "directed", weighted = T)
t4.net <- graph_from_adjacency_matrix(t4, mode = "directed", weighted = T)
#Rescaling Networks
#Time 1
l <- layout_with_fr(t1.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t1.net)$color <- if_else( E(t1.net)$weight > 0, "green3", "red3")
V(t1.net)$label <- NA
V(t1.net)$size <- igraph::degree(t1.net, v = V(t1.net), mode = "in")*2
plot(t1.net, layout=l, edge.arrow.size = .3, rescale = F)
title("Time 1")
#Time 2
l <- layout_in_circle(t2.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t2.net)$color <- if_else( E(t2.net)$weight > 0, "green3", "red3")
V(t2.net)$label <- NA
V(t2.net)$size <- igraph::degree(t2.net, v = V(t2.net), mode = "in")*2
plot(t2.net, layout=l, edge.arrow.size = .3, rescale = F)
title("Time 2")
#Time 3
l <- layout_with_dh(t3.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t3.net)$color <- if_else( E(t3.net)$weight > 0, "green3", "red3")
V(t3.net)$label <- NA
V(t3.net)$size <- igraph::degree(t3.net, v = V(t3.net), mode = "in")*2
plot(t3.net, layout=l, edge.arrow.size = .3, rescale = F)
title("Time 3")
#Time 4
l <- layout_with_dh(t4.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t4.net)$color <- if_else( E(t4.net)$weight > 0, "green3", "red3")
V(t4.net)$label <- NA
V(t4.net)$size <- igraph::degree(t4.net, v = V(t4.net), mode = "in")*2
plot(t4.net, layout=l, edge.arrow.size = .3, rescale = F)
title("Time 4")
#par(op)
op <- par(mfrow=c(2,2), mai = c(0,0,0.7,0))
#Making a Signed Graph Objects (Times 1:4)
t1.net <- graph_from_adjacency_matrix(t1, mode = "directed", weighted = T)
t2.net <- graph_from_adjacency_matrix(t2, mode = "directed", weighted = T)
t3.net <- graph_from_adjacency_matrix(t3, mode = "directed", weighted = T)
t4.net <- graph_from_adjacency_matrix(t4, mode = "directed", weighted = T)
#Rescaling Networks
#Time 1
l <- layout_with_fr(t1.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t1.net)$color <- if_else( E(t1.net)$weight > 0, "green3", "red3")
V(t1.net)$label <- NA
V(t1.net)$size <- igraph::degree(t1.net, v = V(t1.net), mode = "in")*2
plot(t1.net, layout=l, edge.arrow.size = .3, rescale = F)
title("Time 1")
#Time 2
l <- layout_in_circle(t2.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t2.net)$color <- if_else( E(t2.net)$weight > 0, "green3", "red3")
V(t2.net)$label <- NA
V(t2.net)$size <- igraph::degree(t2.net, v = V(t2.net), mode = "in")*2
plot(t2.net, layout=l, edge.arrow.size = .3, rescale = F)
title("Time 2")
#Time 3
l <- layout_in_circle(t3.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t3.net)$color <- if_else( E(t3.net)$weight > 0, "green3", "red3")
V(t3.net)$label <- NA
V(t3.net)$size <- igraph::degree(t3.net, v = V(t3.net), mode = "in")*2
plot(t3.net, layout=l, edge.arrow.size = .3, rescale = F)
title("Time 3")
#Time 4
l <- layout_in_circle(t4.net)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1) #rescale network image
E(t4.net)$color <- if_else( E(t4.net)$weight > 0, "green3", "red3")
V(t4.net)$label <- NA
V(t4.net)$size <- igraph::degree(t4.net, v = V(t4.net), mode = "in")*2
plot(t4.net, layout=l, edge.arrow.size = .3, rescale = F)
title("Time 4")
par(op)
View(cov1)
View(cov4)
View(cov1)
m <- lm(V19 ~ V17, data = cov1)
m
